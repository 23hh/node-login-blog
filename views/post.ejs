<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>상세페이지</title>

    <!--    BootStrap Library-->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
        integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
        integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
        crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous"></script>

    <!-- Font Awesome CSS -->
    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">

    <!--    JQuery-->
    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>

    <!--    Javascript-->
    <script src="#"></script>

    <!--    Include CSS -->
    <!-- <link href="/meStyleSheet.css" rel="stylesheet" /> -->

</head>
<style>
</style>
<script>
    let username;
    $(document).ready(function () {
        // 비회원, 회원 전부 볼 수 있어야하기 때문에 에러가 발생하지 않아야한다.
        if (localStorage.getItem("token")) {
            getSelf(function (user) {
                username = user.nickname;
                console.log(user)
                $(`#btnModify`).show()
            })
        }
        getComments();
        getDetail();
    });
    function getSelf(callback) {
        $.ajax({
            type: "GET",
            url: "/api/users/me",
            headers: {
                authorization: `Bearer ${localStorage.getItem("token")}`,
            },
            data: {},
            success: function (response) {
                callback(response.user);
            },
            error: function (error) {
                const status = error;
                if (status == 401) {
                    alert("로그인이 필요 합니다.");
                } else {
                    //문제가 발생하였을 경우 현재 localStorage에 있는 데이터를 전부 삭제한다.
                    localStorage.clear();
                    alert("알 수 없는 문제가 발생했습니다. 관리자에게 문의 하세요.");
                }
                window.location.href = "/";
            }
        });
    }

    function getDetail() {
        const postId = location.pathname.split('/')[2]
        $.ajax({
            type: "GET",
            url: `/api/posts/${postId}`,
            data: {},
            headers: {
                authorization: `Bearer ${localStorage.getItem("token")}`,
            },
            success: function (response) {
                let postDetail = response["detail"];
                $("#inputName").text(postDetail["nickname"]);
                $("#inputTitle").text(postDetail["title"]);
                $("#inputContent").text(postDetail["content"]);
                sessionStorage.setItem("inputName", postDetail["nickname"]);
                sessionStorage.setItem("inputTitle", postDetail["title"]);
                sessionStorage.setItem("inputContent", postDetail["content"]);
                if (username == postDetail["nickname"]) {
                    $(`#btnModify`).show();
                } else {
                    $(`#btnModify`).hide();
                }
            },
        });
    }
    // 해당 게시글의 모든 Comments를 조회
    function getComments() {
        //URL의 Depth가 바뀐다면 split Array 인자도 수정해야한다.
        const postId = location.pathname.split("/")[2]
        const token = localStorage.getItem("token");
        $('#commentbody').empty();
        $.ajax({
            type: "GET",
            url: `/api/comments/${postId}`,
            headers: {
                authorization: `Bearer ${token}`,
            },
            data: { token },
            success: function (response) {
                const comments = response['comments'];
                for (const commentObject of comments) {
                    makeComment(commentObject)
                }
            },
            error: function (error) {
                console.error(error.responseJSON.errorMessage);
            },
        });
    }
    function modifyCommentShow(commentId) {
        $(`#comment${commentId}`).hide()
        $(`#commentIcon${commentId}`).hide()
        $(`#commentDiv${commentId}`).show()
        const commentText = $(`#comment${commentId}`).text().trim();
        $(`#commentInput${commentId}`).val(commentText)
    }
    function modifyCommentHide(commentId) {
        $(`#comment${commentId}`).show()
        $(`#commentIcon${commentId}`).show()
        $(`#commentDiv${commentId}`).hide()
    }
    //댓글 수정
    function modifyComment(commentId) {
        const comment = $(`#commentInput${commentId}`).val()
        if (!comment) {
            alert("댓글 내용이 존재하지 않습니다.")
            return;
        }
        $.ajax({
            type: "PATCH",
            url: `/api/comments/${commentId}`,
            headers: {
                authorization: `Bearer ${localStorage.getItem('token')}`,
            },
            data: { comment },
            success: function (response) {
            },
            error: function (error) {
                console.error(error.responseJSON.errorMessage);
            },
        });
        $(`#comment${commentId}`).text(comment)
        modifyCommentHide(commentId)
    }
    // 댓글 삭제
    function deleteComment(commentId) {
        if (confirm("댓글을 삭제하시겠습니까?")) {
            $.ajax({
                type: "DELETE",
                url: `/api/comments/${commentId}`,
                headers: {
                    authorization: `Bearer ${localStorage.getItem("token")}`
                },
                data: {},
                success: function (response) {
                    $(`#commentBody${commentId}`).hide()
                },
                error: function (error) {
                    console.error(error.responseJSON.errorMessage);
                    alert(error.responseJSON.errorMessage)
                },
            });
        }
    }
    // 댓글을 UI에 그려주는 함수
    function makeComment(commentObject) {
        const { commentId, nickname, comment, userId } = commentObject;
        // 접속한 username와 댓글 nickname가 같을 경우
        if (username == nickname) {
            const temp_html = `
            <tr id="commentBody${commentId}">
                <td scope="col">${nickname}</td>
                <td scope="col" id="comment${commentId}">${comment}
                </td>
                <td id="commentIcon${commentId}">
                    <i class="fa fa-pencil" aria-hidden="true" onclick="modifyCommentShow(${commentId})"></i>
                    <i class="fa fa-times" aria-hidden="true" onclick="deleteComment(${commentId})"></i>
                </td>
                <td colspan="2">
                <div id="commentDiv${commentId}" class="input-group mb-3" style="display: none">
                  <input id="commentInput${commentId}" type="text" class="form-control" aria-label="Recipient's username" aria-describedby="basic-addon2">
                  <div class="input-group-append">
                    <button class="btn btn-outline-secondary" type="button" onclick="modifyComment(${commentId})">저장</button>
                  </div>
                </div>
                </td>
            </tr>`
            $('#commentTableBody').append(temp_html)
        } else { // 접속한 username와 댓글 nickname가 다를 경우
            const temp_html = `<tr>
                <td scope="col">${nickname}</td>
                <td scope="col">${comment}</td>
                <td></td>
            </tr>`
            $('#commentTableBody').append(temp_html)
        }
    }
    // 댓글 작성
    function writeComment() {
        const comment = $('#comment').val()
        const postId = location.pathname.split("/")[2]
        if (!comment) {
            alert("댓글 내용을 입력 해주세요.")
            return;
        }
        $.ajax({
            type: "POST",
            url: `/api/comments/${postId}`,
            headers: {
                authorization: `Bearer ${localStorage.getItem('token')}`,
            },
            data: { comment },
            success: function (response) { //새로고침
                alert(response.result)
                location.reload();
                history.go(0);
            },
            error: function (error) {
                alert(error.responseJSON.errorMessage)
            },
        });
    }
    function loginCheck() {
        if (!localStorage.getItem("token")) {
            alert("로그인이 필요한 기능입니다.")
            location.href = "/login"
        }
    }
    function modifyPost() {
        const postId = location.pathname.split("/")[2]
        location.href = `/modify/${postId}`
    }
</script>

<body>

    <div>


        <div class="post-body">

            <div>
                <button id="btnModify" type="button" class="btn btn-primary" onclick="modifyPost()"
                    style="display:none">수정
                </button>
                <button type="button" class="btn btn-secondary" onclick="location.href='/'">취소</button>
            </div>
            <label for="alert_title">title</label>
            <div class="alert alert-secondary" role="alert" id="inputTitle">
            </div>

            <div class="form-group">
                <label for="content">Content</label>
                <textarea class="form-control" id="inputContent" rows="10" disabled></textarea>
            </div>

            <table class="table">
                <thead class="thead-light">
                    <colgroup>
                        <col style="width:10%" />
                        <col style="width:80%" />
                        <col style="width:10%" />
                    </colgroup>
                </thead>


                <tbody id="commentTableBody">

                </tbody>
            </table>

            <div>
                <div class="input-group mb-3" id="commentWriteBody">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="basic-addon1">Comment</span>
                    </div>
                    <input type="text" class="form-control" aria-label="Username" aria-describedby="basic-addon1"
                        id="comment" onclick="loginCheck()">
                    <button type="button" class="btn btn-primary" onclick="writeComment()">작성</button>

                </div>
            </div>
        </div>


</body>

</html>